trigger:
  - main

pool:
  vmImage: "windows-latest"

variables:
  ENVIRONMENT: dev
  azureProjectName: "pwd-backend"
  projFileName: "PeikkoPrecastWallDesigner.Api/PeikkoPrecastWallDesigner.Api.csproj"
  testProjFileName: "PeikkoPrecastWallDesigner.UnitTests/PeikkoPrecastWallDesigner.UnitTests.csproj"
  workingDirectory: "$(System.DefaultWorkingDirectory)/src"
  buildConfiguration: "Release"
  resourceGroupName: "$(azureProjectName)-$(ENVIRONMENT)-rg"
  webAppName: "$(azureProjectName)-$(ENVIRONMENT)-webapp"

stages:
- stage: Initialize
  displayName: Initialization
  jobs:
  - job: ListFiles
    displayName: List Working Directory
    steps:
    - script: dir "$(System.DefaultWorkingDirectory)"
      displayName: "List files in working directory"
  - job: InstallDotNet
    displayName: Install .NET SDK
    steps:
    - task: UseDotNet@2
      displayName: 'Install .NET SDK 9'
      inputs:
        packageType: 'sdk'
        version: '9.x'
        installationPath: $(Agent.ToolsDirectory)/dotnet
        arguments: "--verbosity detailed"
        includePreviewVersions: true

- stage: Restore
  displayName: Restore Packages
  jobs:
  - job: RestorePackages
    displayName: Restore NuGet Packages
    steps:
    - task: DotNetCoreCLI@2
      displayName: "dotnet restore"
      inputs:
        command: "restore"
        projects: "**/*.csproj"
        feedsToUse: "select"
        # vstsFeed: ""  # Add your feed GUID if required

- stage: Build
  displayName: Build
  dependsOn: Restore
  jobs:
  - job: BuildProjects
    displayName: Build All Projects
    steps:
    - task: DotNetCoreCLI@2
      displayName: "Build All Projects"
      inputs:
        command: "build"
        projects: "**/*.csproj"
        arguments: "--configuration $(buildConfiguration)"

- stage: Test
  displayName: Test
  dependsOn: Build
  jobs:
  - job: RunTests
    displayName: Unit Tests
    steps:
    - task: DotNetCoreCLI@2
      displayName: "Run Unit Tests"
      inputs:
        command: "test"
        projects: "$(workingDirectory)/$(testProjFileName)"
        arguments: "--configuration $(buildConfiguration) --logger:trx"

- stage: Deploy
  displayName: Publish and Deploy
  dependsOn: Test
  jobs:
  steps:
  - task: DotNetCoreCLI@2
    displayName: "Publish"
    inputs:
      command: "publish"
      publishWebProjects: false
      projects: "$(workingDirectory)/$(projFileName)"
      arguments: "--configuration $(buildConfiguration) --output $(Build.ArtifactStagingDirectory)/$(azureProjectName)_$(ENVIRONMENT)_$(Build.BuildNumber) --verbosity detailed"

  - task: PublishBuildArtifacts@1
    displayName: "Publish Build Artifacts"
    inputs:
      PathtoPublish: "$(Build.ArtifactStagingDirectory)/$(azureProjectName)_$(ENVIRONMENT)_$(Build.BuildNumber)"
      ArtifactName: "$(azureProjectName)_LatestBuild"
      publishLocation: "Container"
  - deployment: DeployWebApp
    displayName: Deploy to Azure
    environment: "$(ENVIRONMENT)"
    strategy:
      runOnce:
        deploy:
          steps:
          - task: AzureRmWebAppDeployment@4
            displayName: "Deploy to Azure WebApp"
            inputs:
              ConnectionType: "AzureRM"
              azureSubscription: "Peikko Services Azure Connection"
              enableCustomDeployment: true
              DeploymentType: "zipDeploy"
              appType: "webApp"
              WebAppName: "$(webAppName)"
              packageForLinux: "$(Build.ArtifactStagingDirectory)/**/*.zip"
              enableCustomApplicationSetting: true
              RemoveAdditionalFilesFlag: true